name: CI
'on':
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  lint-dockerfile:
    name: Lint Dockerfile
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
      - name: Run Hadolint Dockerfile Linter
        uses: burdzwastaken/hadolint-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HADOLINT_ACTION_DOCKERFILE_FOLDER: docker

  lint-markdown:
    name: Lint Markdown
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Run Remark Markdown Linter
        run: |
          npm install
          npm run lint:md
      - name: Run Textlint Markdown Linter
        run: npm run lint:text
  
  # lint-code:
  #   name: Lint Python
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Git checkout
  #       uses: actions/checkout@v2
  #     - name: Add Submodules
  #       run: git submodule update --init --recursive
  #     - name: Set up Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: '2.7'
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -r requirements.txt
  #     - name: Lint with flake8
  #       run: |
  #         pip install flake8
  #         flake8 firos

  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
      - name: Add Submodules
        run: git submodule update --init --recursive
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '2.7'
      - name: 'Unit Tests with Python 2.7'
        run: |
          pip install -r requirements.txt
          export PYTHONPATH="${PYTHONPATH}:${TRAVIS_BUILD_DIR}/firos/include/FiwareObjectConverter"
          cd firos && python -m unittest discover
